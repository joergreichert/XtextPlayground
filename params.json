{"name":"Xtext Playground","tagline":"Playground for special use cases with Xtext","body":"# TODO markers in DSL\r\nUses [this](http://blogs.itemis.de/stundzig/archives/827) blog post as starting point to support TODO markers in your DSL:\r\n\r\n![Task tags in editor](http://joergreichert.github.io/XtextPlayground/images/task_tags_1.png)\r\n\r\nYou can configure the labels for which markers should be created in the Eclipse preferences under NameOfYourDSL/Compiler/Task Tags:\r\n\r\n![Task tags configuration in preference page](http://joergreichert.github.io/XtextPlayground/images/task_tags_2.png)\r\n\r\nYou can also define the marker labels project specific by opening the project properties (context menu on the project in the workspace and Properties):\r\n\r\n![Task tags configuration in project properties page](http://joergreichert.github.io/XtextPlayground/images/task_tags_3.png)\r\n\r\n*Update site*: [http://joergreichert.github.io/XtextPlayground/updatesite/](http://joergreichert.github.io/XtextPlayground/updatesite/)\r\n\r\n*Usage*: After install open grammar generator workflow (e.g. GenerateMyDsl.mwe2 when your DSL's name is \"mydsl\") and add\r\n\r\n```\r\n...\r\nWorkflow {\r\n...\r\n   component = Generator {\r\n   ...\r\n      language = auto-inject {\r\n      ...\r\n         fragment = org.eclipse.xtext.todo.TodoFragment auto-inject {}\r\n      }\r\n   }\r\n}\r\n```\r\n\r\nThe use this workflow file to regenerate your grammar. Note: You have to update the plugin.xml in the grammar UI plugin with the contents of plugin.xml_gen.\r\n\r\n# Others\r\n* testing unicode support in grammar, e.g. umlauts in keywords and identifiers\r\n* reference chains, e.g. a.b.c where a is an entity having attribute b typed as entity which itself has an attribute\r\n* importing existing ecore packages and referencing their elements inside the DSL\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}